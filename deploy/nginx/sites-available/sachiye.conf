# Redirect HTTP to HTTPS
server {
    listen 80 deferred;
	server_name sachiye.xyz www.sachiye.xyz;
	return 301 https://sachiye.xyz$request_uri;
}

# Sachiye.xyz
server {
	listen 443 ssl http2 deferred;
	# set the correct host(s) for your site
	server_name sachiye.xyz www.sachiye.xyz;

	keepalive_timeout 70;
	client_max_body_size 5M;

    # Import LetsEncrypt SSL stuff
	ssl_certificate /etc/letsencrypt/live/www.sachiye.xyz/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/www.sachiye.xyz/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;

	################
	# Static files #
	################
	#location /static/ {
	#	root /srv/http;
	#	expires 1m;
	#	access_log off;
	#	log_not_found off;
	#}

	#####
	# / #
	#####
	location / {
		# Logs
		access_log /var/log/nginx/sachiye.log combined;
		if ($block_subnet_logs) { access_log off; }

		# Set headers
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;

		# We don't want nginx trying to do something clever with
		# redirects, we set the Host: header above already.
		proxy_redirect off;
		proxy_pass http://wotd;
		# proxy_pass http://127.0.0.1:8000
		# proxy_pass unix:/opt/sachiye/gunicorn
	}

	location /robots.txt {
		return 404;
		log_not_found off;
		access_log off;
	}

	###############
	# LetsEncrypt #
	###############
	location ^~ /.well-known/acme-challenge/ {
		allow all;
		root /var/lib/letsencrypt/;
		default_type "text/plain";
		try_files $uri =404;
	}
}
