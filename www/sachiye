#!/usr/bin/env python

from flask import Flask, render_template
from flask import g
from flask import request, redirect

import sqlite3
import os

###############
# Global vars #
###############
app = Flask(__name__)
# Disable whitespace and newline weirdness
app.jinja_env.trim_blocks = True
app.jinja_env.lstrip_blocks = True
# Global vars
DB_name = "../data.db"

#############
# DB helper #
# functions #
#############
def connect_db():
    """Connects to the specified database"""
    if os.path.exists(DB_name):
        db = sqlite3.connect(DB_name)
        return db
    else:
        return error()

@app.teardown_appcontext
def close_connection(exception):
    """Closes the database at the end of the request"""
    if hasattr(g, 'db'):
        g.db.close()

#############
#   WOTD    #
# Functions #
#############
@app.route('/')
def wotd_index():
    return redirect('/page/0')

@app.route('/page/<int:page>')
def wotd_page(page):
    # Avoid error: int too large to convert to SQLite INTEGER
    if page.bit_length() > 32:
        return error("Integer too long")
    delta = 3;
    floor = page * delta;
    # (1) Open the DB
    g.db = connect_db()
    # (2) Fetch data from the DB
    data = g.db.execute("SELECT * FROM WOTD ORDER BY date DESC LIMIT ?, ?", (floor, delta)).fetchall()
    # (3) Pass the data to the template
    return render_template('index.html', wotd = data,
            page = page,
            artlen = len(data),
            delta = delta)

@app.route('/rand')
def wotd_rand():
    # (1) Open the DB
    g.db = connect_db()
    # (2) Fetch data from the DB
    data = g.db.execute("SELECT * FROM WOTD ORDER BY RANDOM() LIMIT 1").fetchall()
    # (3) Pass the data to the template
    return render_template('rand.html', wotd = data)

@app.route('/flashcards')
def wotd_flashcards():
    return render_template('flashcards.html')

@app.route('/about')
def wotd_about():
    return render_template('about.html')

@app.route('/error')
def error(msg=None):
    return render_template('error.html', error = msg)

########
# Main #
########
if __name__ == '__main__':
    app.run(debug=True)
